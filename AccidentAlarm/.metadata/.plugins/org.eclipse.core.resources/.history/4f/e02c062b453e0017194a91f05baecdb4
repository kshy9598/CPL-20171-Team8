import java.util.ArrayList;
import java.util.List;
import java.lang.Math;

// 2차 사고 방지를 위한 알람 관리 클래스
public class AccidentAlarm {
	private static final double ALARM_DISTANCE = 1; // 2차 사고 알람을 울리기 위한 사고현장 위치와 운전자 위치의 거리
	private static final int GPS_NUMBER = 5; // 운전자의 최근 GPS 저장 개수
	private List<AccidentLocation> accidentList; // 사고 현장 위치 정보 리스트
	private List<Location> gpsList;
	
	public AccidentAlarm(){
		accidentList = new ArrayList<AccidentLocation>();
	}
	
	// 사고 현장 위치 정보 갱신
	public void getAccidentLocation(List<Location> locationList){
		// 새로운 사고 정보 탐색 및 수습된 사고에 대한 정보 삭제
		for(int i = 0; i < accidentList.size(); i++){
			int index = -1;
			for(int k = 0; k < locationList.size(); k++){
				if(accidentList.get(i).equals(locationList.get(k))){
					index = k;
					locationList.remove(k);
					break;
				}
			}
			
			if(index == -1){
				accidentList.remove(i);
				i--;
			}
		}
		
		// 새로운 사고정보 추가
		for(int i = 0; i < locationList.size(); i++){
			accidentList.add(new AccidentLocation(locationList.get(i)));
		}
	}
	
	// GPS 리스트 갱신 (최근으로부터 GPS_NUMBER 개의 GPS만을 남겨놓는다)
	public void get_nowLocation(double my_latitude, double my_longitude)
	{
		if(gpsList.size() >= GPS_NUMBER){
			gpsList.remove(0);
		}
		gpsList.add(new Location(my_latitude, my_longitude));
	}
	
	// 두 좌표의 거리 계산
	public double calc_distance(double my_latitude, double my_longitude, double accident_latitude, double accident_longitude){
		double ret = Math.sqrt(Math.pow(Math.abs(my_latitude - accident_latitude), 2) + Math.pow(Math.abs(my_longitude - accident_longitude), 2));
		
		return ret;
	}
	
	// 알람 여부를 측정한 함수
	public void check_alarm(){
		for(int i = 0; i < accidentList.size(); i++){
			double first, second;
			first = calc_distance(gpsList.get(GPS_NUMBER - 1).getLatitude(), gpsList.get(GPS_NUMBER - 1).getLongitude(), accidentList.get(i).latitude, accidentList.get(i).longitude);
			if(first <= ALARM_DISTANCE){
				int check;
				for(check = GPS_NUMBER - 2; check >= 0; check--){
					second = calc_distance(gpsList.get(check).getLatitude(), gpsList.get(check).getLongitude(), accidentList.get(i).latitude, accidentList.get(i).longitude);
					if(first )
				}
			}
		}
	}
}
